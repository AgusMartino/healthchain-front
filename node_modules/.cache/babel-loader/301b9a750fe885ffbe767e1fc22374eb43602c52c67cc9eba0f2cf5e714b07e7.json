{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport login from '../views/login.vue';\nimport about from '../views/About.vue';\nimport home from '../views/Home.vue';\nimport contact from '../views/Contact.vue';\nimport member from '../views/Members.vue';\nimport Store from '../store';\nconst routes = [{\n  path: '/',\n  name: 'login',\n  component: login\n}, {\n  path: '/about',\n  name: 'about',\n  component: about\n}, {\n  path: '/home',\n  name: 'home',\n  component: home\n}, {\n  path: '/contact',\n  name: 'contact',\n  component: contact,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/members',\n  name: 'member',\n  component: member,\n  meta: {\n    requiresAuth: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  let routerAuthCheck = true;\n  if (routerAuthCheck) {\n    Store.commit('setUserIsAuthenticated', true);\n  }\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (routerAuthCheck) {\n      next();\n    } else {\n      router.replace('/login');\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","login","about","home","contact","member","Store","routes","path","name","component","meta","requiresAuth","router","history","process","env","BASE_URL","beforeEach","to","from","next","routerAuthCheck","commit","matched","some","record","replace"],"sources":["R:/Agus/Facultad/TFI 5to/healthchain-front/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\r\nimport login from '../views/login.vue'\r\nimport about from '../views/About.vue'\r\nimport home from '../views/Home.vue'\r\nimport contact from '../views/Contact.vue'\r\nimport member from '../views/Members.vue'\r\nimport Store from '../store'\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'login',\r\n    component: login\r\n  },\r\n  {\r\n    path: '/about',\r\n    name: 'about',\r\n    component: about\r\n  },\r\n  {\r\n    path: '/home',\r\n    name: 'home',\r\n    component: home\r\n  },\r\n  {\r\n    path: '/contact',\r\n    name: 'contact',\r\n    component: contact,\r\n    meta: {requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/members',\r\n    name: 'member',\r\n    component: member,\r\n    meta: {requiresAuth: true }\r\n  },\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n});\r\n\r\nrouter.beforeEach((to,from,next)=>{\r\n  let routerAuthCheck = true;\r\n  if(routerAuthCheck){\r\n    Store.commit('setUserIsAuthenticated', true);\r\n  }\r\n  if(to.matched.some(record => record.meta.requiresAuth)){\r\n    if(routerAuthCheck){\r\n      \r\n      next();\r\n    }\r\n    else{\r\n      router.replace('/login');\r\n    }\r\n  }\r\n  else{\r\n    next();\r\n  }\r\n});\r\n\r\n\r\n\r\nexport default router\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,UAAU;AAE5B,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAET;AACb,CAAC,EACD;EACEO,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAER;AACb,CAAC,EACD;EACEM,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEP;AACb,CAAC,EACD;EACEK,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAEN,OAAO;EAClBO,IAAI,EAAE;IAACC,YAAY,EAAE;EAAK;AAC5B,CAAC,EACD;EACEJ,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEL,MAAM;EACjBM,IAAI,EAAE;IAACC,YAAY,EAAE;EAAK;AAC5B,CAAC,CACF;AAED,MAAMC,MAAM,GAAGd,YAAY,CAAC;EAC1Be,OAAO,EAAEd,gBAAgB,CAACe,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CV;AACF,CAAC,CAAC;AAEFM,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAACC,IAAI,EAACC,IAAI,KAAG;EAChC,IAAIC,eAAe,GAAG,IAAI;EAC1B,IAAGA,eAAe,EAAC;IACjBhB,KAAK,CAACiB,MAAM,CAAC,wBAAwB,EAAE,IAAI,CAAC;EAC9C;EACA,IAAGJ,EAAE,CAACK,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACf,IAAI,CAACC,YAAY,CAAC,EAAC;IACrD,IAAGU,eAAe,EAAC;MAEjBD,IAAI,CAAC,CAAC;IACR,CAAC,MACG;MACFR,MAAM,CAACc,OAAO,CAAC,QAAQ,CAAC;IAC1B;EACF,CAAC,MACG;IACFN,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAIF,eAAeR,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}