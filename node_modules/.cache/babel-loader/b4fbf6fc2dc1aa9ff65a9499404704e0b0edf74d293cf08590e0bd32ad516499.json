{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"form\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_select = _resolveComponent(\"v-select\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"form\", _hoisted_1, [_createVNode(_component_v_text_field, {\n    modelValue: $data.cuit,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.cuit = $event),\n    counter: 10,\n    label: \"Cuit\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_btn, {\n    variant: \"outlined\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.GetEmpresa())\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Buscar empresa\")]),\n    _: 1 /* STABLE */\n  })]), $data.validacionCuit ? (_openBlock(), _createElementBlock(\"form\", _hoisted_2, [_createVNode(_component_v_text_field, {\n    modelValue: $data.jsonEmpresa.nombre_empresa,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.jsonEmpresa.nombre_empresa = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n    modelValue: $data.jsonEmpresa.direccion_empresa,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.jsonEmpresa.direccion_empresa = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_select, {\n    modelValue: this.Rolselect,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => this.Rolselect = $event),\n    items: this.jsonRol,\n    \"item-title\": \"Rol\",\n    \"item-value\": \"id\",\n    label: \"Seleccionar Rol\",\n    onChange: this.Rolselect\n  }, null, 8 /* PROPS */, [\"modelValue\", \"items\", \"onChange\"]), _createVNode(_component_v_text_field, {\n    label: \"Motivo\",\n    modelValue: $data.jsonSolicitud.descripcion,\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.jsonSolicitud.descripcion = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"div\", null, [_createVNode(_component_v_btn, {\n    class: \"me-4\",\n    type: \"submit\",\n    onClick: _cache[6] || (_cache[6] = $event => $options.Solicitud())\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" submit \")]),\n    _: 1 /* STABLE */\n  })])])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_1","_createVNode","_component_v_text_field","$data","cuit","$event","counter","label","_component_v_btn","variant","onClick","_cache","$options","GetEmpresa","validacionCuit","_createElementBlock","_hoisted_2","jsonEmpresa","nombre_empresa","direccion_empresa","_component_v_select","Rolselect","items","jsonRol","onChange","jsonSolicitud","descripcion","type","Solicitud"],"sources":["R:\\Agus\\Facultad\\TFI 5to\\healthchain-front\\src\\views\\seleccionEmpresaUser.vue"],"sourcesContent":["<template>\r\n  <form class=\"form\">\r\n      <v-text-field\r\n        v-model=\"cuit\"\r\n        :counter=\"10\"\r\n        label=\"Cuit\"\r\n      ></v-text-field>\r\n\r\n      <v-btn variant=\"outlined\" @click=\"GetEmpresa()\">Buscar empresa</v-btn>\r\n  </form>\r\n\r\n  <form class=\"form\" v-if=\"validacionCuit\">\r\n      <v-text-field\r\n        v-model=\"jsonEmpresa.nombre_empresa\"\r\n      ></v-text-field>\r\n  \r\n      <v-text-field\r\n        v-model=\"jsonEmpresa.direccion_empresa\"\r\n      ></v-text-field>\r\n\r\n      <v-select\r\n          v-model=\"this.Rolselect\"\r\n          :items=\"this.jsonRol\"\r\n          item-title=\"Rol\"\r\n          item-value=\"id\"\r\n          label=\"Seleccionar Rol\"\r\n          @change=\"this.Rolselect\"\r\n        ></v-select>\r\n\r\n      <v-text-field\r\n        label=\"Motivo\"\r\n        v-model=\"jsonSolicitud.descripcion\"\r\n      ></v-text-field>\r\n      <div>\r\n        <v-btn\r\n        class=\"me-4\"\r\n        type=\"submit\"\r\n        @click=\"Solicitud()\"\r\n      >\r\n        submit\r\n      </v-btn>\r\n      </div>  \r\n    </form>\r\n</template>\r\n  <script>\r\nimport axios from 'axios';\r\n    export default{\r\n      data(){\r\n        return{\r\n          validacionCuit: false,\r\n          cuit: null,\r\n          Rolselect: null,\r\n          jsonEmpresa: {\r\n            nombre_empresa:\"\",\r\n            direccion_empresa: \"\",\r\n          },\r\n          jsonRol: [\r\n            {id: '1', Rol: 'Empleado Administrador'},\r\n            {id: '2', Rol: 'Empleado Financiero'},\r\n            {id: '3', Rol: 'Empleado Monitor'}\r\n          ],\r\n          jsonSolicitud:{\r\n            cuit_empresa: null,\r\n            id_usuario: null,\r\n            tipo_Solicitud: {\r\n              id: \"2\",\r\n            },\r\n            descripcion: null,\r\n            estado: \"1\",\r\n          }\r\n        }\r\n        \r\n      },\r\n    methods: {\r\n            Solicitud(){\r\n              const status = this.RegisterEmployee();\r\n              if(status == 200){\r\n                const userdata = this.GetUser();\r\n                this.jsonSolicitud.id_usuario = userdata.id_usuario.toString()\r\n                this.jsonSolicitud.cuit_empresa = this.cuit.toString()\r\n                axios.post(\"https://localhost:7274/api/Solicitud/RegisterSolicitud\", this.jsonSolicitud)\r\n                .then(response=>{\r\n                  if(response.status == 200)\r\n                    alert(\"Solicitud enviado con exito\")\r\n                })\r\n                .catch(err =>{\r\n                  alert(err.data)\r\n                })\r\n              }\r\n            },\r\n            RegisterEmployee(){\r\n              const userdata = parseJwt()\r\n              const JsonRegister = {\r\n                user: userdata.email.toString(),\r\n                name: userdata.given_name.toString(),\r\n                lastname: userdata.family_name.toString(),\r\n                user_type: \"2\"\r\n              }\r\n              axios.post(\"https://localhost:7151/api/User/RegisterUser\", JsonRegister)\r\n              .then(response=>{\r\n                return response.status\r\n              })\r\n              .catch(err =>{\r\n                alert(err.data)\r\n              })\r\n            },\r\n            GetUser(){\r\n              const jsonPayload = decodeToken();\r\n              const userData = [];\r\n              axios.get(\"https://localhost:7151/api/User/ValidateUser/\" + jsonPayload.email.toString())\r\n                      .then(response=>{\r\n                        this.userData = response.data;\r\n                      })\r\n                      .catch(err =>{\r\n                        alert(err.data)\r\n                      })\r\n              return userData;\r\n            },\r\n            GetEmpresa(){\r\n              val = false;\r\n              if(this.cuit == null){\r\n                alert(\"Debe completar el cuit de la empresa a buscar\")\r\n              }\r\n              else{\r\n                axios.get(\"https://localhost:7227/api/Empresa/GetOneEmpresa/\" + this.cuit.toString())\r\n                .then(response=>{\r\n                  this.jsonEmpresa = response.data;\r\n                  if(response.status==200){\r\n                    val = true;\r\n                  }else{\r\n                    val = false;\r\n                  }\r\n                })\r\n                .catch(err =>{\r\n                  alert(err.data)\r\n                  val = false;\r\n                })\r\n                .finally(data =>{\r\n                  this.validacionCuit = val;\r\n                })\r\n              }\r\n            },\r\n            setSelected(e){\r\n              console.log(e)\r\n              this.Rol = e\r\n            },\r\n            parseJwt () {\r\n            const token = localStorage.getItem('id_token')\r\n            const base64Url = token.split('.')[1];\r\n            const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n            const jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function(c) {\r\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n            }).join(''));\r\n            return JSON.parse(jsonPayload)\r\n            },\r\n          }\r\n      }\r\n  </script>\r\n  <style>\r\n    .form{\r\n        margin-top: 20px;\r\n        margin-left: 20%;\r\n        margin-right: 20%;\r\n        justify-content: space-around;\r\n        align-items: center;\r\n    }\r\n  </style>\r\n"],"mappings":";;EACQA,KAAK,EAAC;AAAM;;;EAUZA,KAAK,EAAC;;;;;;6DAVZC,mBAAA,CAQO,QARPC,UAQO,GAPHC,YAAA,CAIgBC,uBAAA;gBAHLC,KAAA,CAAAC,IAAI;+DAAJD,KAAA,CAAAC,IAAI,GAAAC,MAAA;IACZC,OAAO,EAAE,EAAE;IACZC,KAAK,EAAC;2CAGRN,YAAA,CAAsEO,gBAAA;IAA/DC,OAAO,EAAC,UAAU;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAN,MAAA,IAAEO,QAAA,CAAAC,UAAU;;sBAAI,MAAc,C,iBAAd,gBAAc,E;;QAGzCV,KAAA,CAAAW,cAAc,I,cAAvCC,mBAAA,CA+BS,QA/BTC,UA+BS,GA9BLf,YAAA,CAEgBC,uBAAA;gBADLC,KAAA,CAAAc,WAAW,CAACC,cAAc;+DAA1Bf,KAAA,CAAAc,WAAW,CAACC,cAAc,GAAAb,MAAA;2CAGrCJ,YAAA,CAEgBC,uBAAA;gBADLC,KAAA,CAAAc,WAAW,CAACE,iBAAiB;+DAA7BhB,KAAA,CAAAc,WAAW,CAACE,iBAAiB,GAAAd,MAAA;2CAGxCJ,YAAA,CAOcmB,mBAAA;qBANIC,SAAS;oEAATA,SAAS,GAAAhB,MAAA;IACtBiB,KAAK,OAAOC,OAAO;IACpB,YAAU,EAAC,KAAK;IAChB,YAAU,EAAC,IAAI;IACfhB,KAAK,EAAC,iBAAiB;IACtBiB,QAAM,OAAOH;gEAGlBpB,YAAA,CAGgBC,uBAAA;IAFdK,KAAK,EAAC,QAAQ;gBACLJ,KAAA,CAAAsB,aAAa,CAACC,WAAW;+DAAzBvB,KAAA,CAAAsB,aAAa,CAACC,WAAW,GAAArB,MAAA;2CAEpCN,mBAAA,CAQM,cAPJE,YAAA,CAMMO,gBAAA;IALNV,KAAK,EAAC,MAAM;IACZ6B,IAAI,EAAC,QAAQ;IACZjB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAN,MAAA,IAAEO,QAAA,CAAAgB,SAAS;;sBAClB,MAED,C,iBAFC,UAED,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}