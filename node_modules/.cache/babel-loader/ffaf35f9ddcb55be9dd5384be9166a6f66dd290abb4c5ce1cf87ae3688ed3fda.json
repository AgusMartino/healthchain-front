{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $setup.submit && $setup.submit(...args), [\"prevent\"]))\n  }, [_createVNode(_component_v_text_field, {\n    modelValue: $setup.name.value.value,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.name.value.value = $event),\n    counter: 10,\n    \"error-messages\": $setup.name.errorMessage.value,\n    label: \"Nombre\"\n  }, null, 8 /* PROPS */, [\"modelValue\", \"error-messages\"]), _createVNode(_component_v_text_field, {\n    modelValue: $setup.cuit.value.value,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.cuit.value.value = $event),\n    counter: 7,\n    \"error-messages\": $setup.cuit.errorMessage.value,\n    label: \"Cuit\"\n  }, null, 8 /* PROPS */, [\"modelValue\", \"error-messages\"]), _createVNode(_component_v_text_field, {\n    modelValue: $setup.email.value.value,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.email.value.value = $event),\n    \"error-messages\": $setup.email.errorMessage.value,\n    label: \"E-mail\"\n  }, null, 8 /* PROPS */, [\"modelValue\", \"error-messages\"]), _createVNode(_component_v_btn, {\n    class: \"me-4\",\n    type: \"submit\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" submit \")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_v_btn, {\n    onClick: $setup.handleReset\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" clear \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])], 32 /* HYDRATE_EVENTS */);\n}","map":{"version":3,"names":["_createElementBlock","onSubmit","_cache","_withModifiers","args","$setup","submit","_createVNode","_component_v_text_field","name","value","$event","counter","errorMessage","label","cuit","email","_component_v_btn","class","type","onClick","handleReset"],"sources":["R:\\Agus\\Facultad\\TFI 5to\\healthchain-front\\src\\views\\formEmpresa.vue"],"sourcesContent":["<template>\r\n    <form @submit.prevent=\"submit\">\r\n      <v-text-field\r\n        v-model=\"name.value.value\"\r\n        :counter=\"10\"\r\n        :error-messages=\"name.errorMessage.value\"\r\n        label=\"Nombre\"\r\n      ></v-text-field>\r\n  \r\n      <v-text-field\r\n        v-model=\"cuit.value.value\"\r\n        :counter=\"7\"\r\n        :error-messages=\"cuit.errorMessage.value\"\r\n        label=\"Cuit\"\r\n      ></v-text-field>\r\n  \r\n      <v-text-field\r\n        v-model=\"email.value.value\"\r\n        :error-messages=\"email.errorMessage.value\"\r\n        label=\"E-mail\"\r\n      ></v-text-field>\r\n\r\n      <v-btn\r\n        class=\"me-4\"\r\n        type=\"submit\"\r\n      >\r\n        submit\r\n      </v-btn>\r\n  \r\n      <v-btn @click=\"handleReset\">\r\n        clear\r\n      </v-btn>\r\n    </form>\r\n  </template>\r\n  <script setup>\r\n    import { useField, useForm } from 'vee-validate'\r\n  \r\n    const { handleSubmit, handleReset } = useForm({\r\n      validationSchema: {\r\n        name (value) {\r\n          if (value?.length >= 2) return true\r\n  \r\n          return 'Name needs to be at least 2 characters.'\r\n        },\r\n        phone (value) {\r\n          if (value?.length > 8 && /[0-9-]+/.test(value)) return true\r\n  \r\n          return 'Phone number needs to be at least 9 digits.'\r\n        },\r\n        email (value) {\r\n          if (/^[a-z.-]+@[a-z.-]+\\.[a-z]+$/i.test(value)) return true\r\n  \r\n          return 'Must be a valid e-mail.'\r\n        },\r\n        select (value) {\r\n          if (value) return true\r\n  \r\n          return 'Select an item.'\r\n        },\r\n        checkbox (value) {\r\n          if (value === '1') return true\r\n  \r\n          return 'Must be checked.'\r\n        },\r\n      },\r\n    })\r\n    const name = useField('name')\r\n    const cuit = useField('cuit')\r\n    const email = useField('email')\r\n  \r\n    const submit = handleSubmit(values => {\r\n      alert(JSON.stringify(values, null, 2))\r\n    })\r\n  </script>"],"mappings":";;;;uBACIA,mBAAA,CA+BO;IA/BAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,MAAA,CAAAC,MAAA,IAAAD,MAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;MAC3BG,YAAA,CAKgBC,uBAAA;gBAJLH,MAAA,CAAAI,IAAI,CAACC,KAAK,CAACA,KAAK;+DAAhBL,MAAA,CAAAI,IAAI,CAACC,KAAK,CAACA,KAAK,GAAAC,MAAA;IACxBC,OAAO,EAAE,EAAE;IACX,gBAAc,EAAEP,MAAA,CAAAI,IAAI,CAACI,YAAY,CAACH,KAAK;IACxCI,KAAK,EAAC;6DAGRP,YAAA,CAKgBC,uBAAA;gBAJLH,MAAA,CAAAU,IAAI,CAACL,KAAK,CAACA,KAAK;+DAAhBL,MAAA,CAAAU,IAAI,CAACL,KAAK,CAACA,KAAK,GAAAC,MAAA;IACxBC,OAAO,EAAE,CAAC;IACV,gBAAc,EAAEP,MAAA,CAAAU,IAAI,CAACF,YAAY,CAACH,KAAK;IACxCI,KAAK,EAAC;6DAGRP,YAAA,CAIgBC,uBAAA;gBAHLH,MAAA,CAAAW,KAAK,CAACN,KAAK,CAACA,KAAK;+DAAjBL,MAAA,CAAAW,KAAK,CAACN,KAAK,CAACA,KAAK,GAAAC,MAAA;IACzB,gBAAc,EAAEN,MAAA,CAAAW,KAAK,CAACH,YAAY,CAACH,KAAK;IACzCI,KAAK,EAAC;6DAGRP,YAAA,CAKQU,gBAAA;IAJNC,KAAK,EAAC,MAAM;IACZC,IAAI,EAAC;;sBACN,MAED,C,iBAFC,UAED,E;;MAEAZ,YAAA,CAEQU,gBAAA;IAFAG,OAAK,EAAEf,MAAA,CAAAgB;EAAW;sBAAE,MAE5B,C,iBAF4B,SAE5B,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}